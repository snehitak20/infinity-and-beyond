/*root: can use it to create a variable in CSS selectors, and serves as a quick and easy way to change color */
:root {
    --coral: #d16c6c;
    --lavender: #737aca;
    --navy: #3d4079;
    --white: #f8f5f5;
}

/* This is an universal selector so it will select for all the elements. */
* {
    box-sizing: border-box;
    padding: 0px;
    margin: 0px;
    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

/* ::selection: this highlights what the user selects on the webpage */
/* var: this allows the selection of a color from the root section; here the background color of the highlighted section will be lavender */ 
::selection {
    background-color: var(--lavender);
    color: var(--white)
}

html {
    font-size: 62.5%
}

/* This selects for all elements within the header */
header {
    padding: 20px; 
    color: var(--navy);
    text-align: center;
}

/* This selects for all <h1> elements within the <header> tag */
header h1 {
    display: block;
    font-size: 70px;
    text-align: left;
}

/* This selects for all elements within the <nav> */
nav {
    display:flex;
    align-items: right;
    justify-content: right;
    text-align:right;
    text-decoration: none;
    padding: auto;
    color: var(--navy);
    font-size: 20px;
}

/* This allows for the creation of the banner across the top of the page. */
.me {
    background-image: url(./sneha2.jpg);
    padding: 100px;
    display:flex;
    background-size: cover;
    background-position: center;
}

/* More specifically here, it is selecting for the name only within the <h1> tag that is within the <header> tag */
header h1 .name {
    color: var(--coral);
    text-align: center;
}

/* Giving flex properties to the application pictures. */
/* Display:flex: allows for the creation of the flex-box properties */
.big-box {
    display:flex;
    justify-content:center;
    width:80%;
    height:500px;
}

/* This specifically sets how the application pictures will be laid out. */
.small-box {
    display:grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);
    width:70%;
    gap:10px;
}

/* This class here selects for the box that appears around each application's picture */
.project {
    display:flex;
    border: 4px solid var(--navy);
    background-size: cover;
    background-position: center;
    justify-content: flex-start;
    align-items: flex-start;
    opacity: 0.9;
    transition: transform 250ms;
}

/* Lines 99-125 are for each of the images that open to the deployed application. */
.refactor {
    background-image: url(./code-refactor.png);
    background-position: center top;
    grid-column: 1/ span 2;
    grid-row: span 2;
}

.guest {
    background-image: url(./guest.png);
    background-position: top;
}

.css {
    background-image: url(./css.png);
}

.portfolio {
    background-image: url(./pro.png);
}

.soon {
    background-image: url(./pup1.jpg);
}

.soon1 {
    background-image: url(./pup2.jpg);
}

/* This is for the text that is within the caption box of the pictures */
.text {
    background-color: var(--navy);
    color: var(--white);
    font-size: 12px;
}

/* This is for all headers within the <h2> */
h2 {
    font-size: 35px;
}

p {
    font-size: 18px;
    text-align: left;
}

a {
    color: var(--navy);
    font-size: 20px;
    text-decoration: none;
}

.float-left {
    float: left;
    margin-right: 25px;
}

.float-right {
    float: right;
    margin-left: 25px;
}

body {
    font-size: 1.75rem; 
    line-height: 1.5;
    color: var(--navy);
    background-color: var(--white)
}

main {
    width: 96%;
    margin: 2rem auto;
}
/* Here this addresses the links that are within the <li> tag */
li{
    display: inline-flex;
    padding: 10px;
    text-decoration: none;
    text-align: center;
}


/* This selects for the <h3> within the <footer> */
footer h3 {
    margin: 3rem;
    text-align: center;
    font-size: 20px;
    color: var(--navy);
    float: right;
}

.text-right {
    text-align: right;
}

/* @media screen: allows for screen adaptation when minimizing/maximizing a window. */
@media screen and (min-width: 768px) {
    .header {
      width: 50%
    }

    .column {
        flex: 0 0 50%;
        max-width: 50%;
      }
}
  
  @media screen and (min-width: 992px) {
    .header {
      width: 100%
    }

    .column {
        flex: 0 0 33.333%;
        max-width: 33.333%;
      }
}